version: '3.8'

services:
  django:
    build:
      context: ./
      dockerfile: ./dockerfiles/development/Dockerfile.django
    command: gunicorn project.wsgi:application --bind 0.0.0.0:8000 --reload
    depends_on:
      - database
    env_file:
      - ./env/production.env
    expose:
      - 8000
    volumes:
      - ./django/project:/django/project
      - ./django/app:/django/app
      - static_volume:/django/staticfiles
      - media_volume:/django/mediafiles

  database:
    image: postgres
    env_file:
      - ./env/development.env
    volumes:
      - database_volume:/var/lib/postgresql/data/

  nginx:
    build:
      context: ./
      dockerfile: ./dockerfiles/production/Dockerfile.nginx
    command: '/bin/sh -c ''while :; do sleep 6h & wait $${!}; nginx -s reload; done & nginx -g "daemon off;"'''
    depends_on:
      - django
    ports:
      - 80:80
      - 443:443
    volumes:
      - ./nginx/production/:/etc/nginx/conf.d
      - ./nginx/production/certbot/conf:/etc/letsencrypt
      - ./nginx/production/certbot/www:/var/www/certbot
      - static_volume:/home/app/web/staticfiles
      - media_volume:/home/app/web/mediafiles
      - build:/home/app/web/build

  certbot:
    entrypoint: "/bin/sh -c 'trap exit TERM; while :; do certbot renew; sleep 12h & wait $${!}; done;'"
    image: certbot/certbot
    volumes:
      - ./nginx/production/certbot/conf:/etc/letsencrypt
      - ./nginx/production/certbot/www:/var/www/certbot

volumes:
  database_volume:
  static_volume:
  media_volume:
  build:
